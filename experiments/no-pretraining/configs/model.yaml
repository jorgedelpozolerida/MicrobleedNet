# This file contains the default configuration for an Apollo (v2.1.1/2, ASE etc. equivalent) U-Net model.
# All parameters are optional as UNetApollo defines defaults to match implementation of Apollo
# in https://bitbucket.org/cerebriu/cerebriu-research-personal/src/9f3018c348d81fcd498407581f358bd63814a90e/Marko/Latest/models/UNetApollo3D.py
# (functionally and numerically equivalent, but different implementation).

# The name of the model class to use.
name: UNetApollo

# Hyperparameters for the model.
config:

  # The following parameters, however, should be changed if applying the model to other tasks or
  # patch sizes etc.
  input_shape: [96, 96, 96]
  n_channels: 1 # T2S/SWI
  n_classes: 2 # cmb/background
  output_activation: 'softmax'

  # Deep supervision currently turned of by default as turning it on requires changes to the loss function
  # A wrapper is needed to support the now multi-output model (pseudo: downsample labels to match DS model outputs & compute loss on all pairs + average)
  deep_supervision: false

  # Optionally the below may be changed, but any changed may modify the topology to no longer match
  # weights of Apollo product.
  # conv_kwargs: {"padding": "same"}
  # kernel_size: [3, 3, 3],
  # n_conv_per_depth: 3
  # n_conv_per_depth_upsampling: 2
  # n_conv_bottom: 2
  # residual_conv_index: 1  # conv layer index from which to generate residual
  # filters_out_bottom_conv: 320
  # hidden_activation: "LeakyReLU"
  # hidden_activation_kwargs: {'alpha': 1e-2}
  # sampling_factor: 2
  # down_sampling_type: 'strided'
  # up_sampling_type: "transposed"
  # up_sampling_conv_kwargs: null
  # up_sampling_filters_factor: 1
  # merge_layer: "Concatenate"
  # merge_layer_kwargs: null
  # merge_order: "skip_first"  # To match Apollo/marko implementation
  # normalization: "InstanceNormalization"
  # normalization_kwargs: {"axis": None, 'epsilon': 1e-5}
  # deep_supervision: True,
  # output_activation: 'sigmoid'
  # out_activation_kwargs: {}
  # kernel_regularizer: "L2"
  # kernel_regularizer_kwargs: {'l2': 1e-5}
